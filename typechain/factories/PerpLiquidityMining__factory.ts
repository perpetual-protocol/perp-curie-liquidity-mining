/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PerpLiquidityMining,
  PerpLiquidityMiningInterface,
} from "../PerpLiquidityMining";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_claimant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "candidate",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityProvider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_begin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "claimStatus",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_week",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimedBalance",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimWeek",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "week",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "merkleProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct MerkleRedeemUpgradeSafe.Claim[]",
        name: "_claims",
        type: "tuple[]",
      },
    ],
    name: "claimWeeks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLengthOfMerkleRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "merkleRootIndexes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_begin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_end",
        type: "uint256",
      },
    ],
    name: "merkleRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_week",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_totalAllocation",
        type: "uint256",
      },
    ],
    name: "seedAllocations",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "updateOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityProvider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_week",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_claimedBalance",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "verifyClaim",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "weekMerkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506116ea806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063c804c39a11610071578063c804c39a14610209578063dd8c9c9d1461021c578063eb0d07f51461022f578063f373579f14610242578063fc0c546a146102555761010b565b8063715018a6146101de5780638da5cb5b146101e6578063bc5920ba146101ee578063c4d66de8146101f65761010b565b806347fb23c1116100de57806347fb23c1146101835780634cd488ab146101a357806358b4e4b4146101b65780636c8381f8146101c95761010b565b8063120aa8771461011057806313af40351461013957806339144f501461014e57806339436b0014610163575b600080fd5b61012361011e3660046112cb565b61025d565b6040516101309190611433565b60405180910390f35b61014c6101473660046110ed565b61027d565b005b6101566103d2565b604051610130919061143e565b610176610171366004611321565b6103d8565b60405161013091906113fb565b610196610191366004611202565b61046d565b60405161013091906113b5565b61014c6101b13660046112f6565b610522565b61014c6101c4366004611234565b6105b8565b6101d16105fe565b6040516101309190611364565b61014c61060d565b6101d16106b7565b61014c6106c6565b61014c6102043660046110ed565b6107c7565b61014c61021736600461110e565b610899565b61015661022a3660046112b3565b610903565b61012361023d366004611234565b610915565b6101566102503660046112b3565b61096b565b6101d161098c565b606860209081526000928352604080842090915290825290205460ff1681565b61028561099b565b6033546001600160a01b039081169116146102d15760405162461bcd60e51b815260040180806020018281038252602d815260200180611662602d913960400191505060405180910390fd5b6001600160a01b0381166103165760405162461bcd60e51b81526004018080602001828103825260228152602001806116116022913960400191505060405180910390fd5b6033546001600160a01b03828116911614156103635760405162461bcd60e51b815260040180806020018281038252602681526020018061168f6026913960400191505060405180910390fd5b6034546001600160a01b03828116911614156103b05760405162461bcd60e51b81526004018080602001828103825260278152602001806115956027913960400191505060405180910390fd5b603480546001600160a01b0319166001600160a01b0392909216919091179055565b609c5490565b606082820360010160008167ffffffffffffffff811180156103f957600080fd5b50604051908082528060200260200182016040528015610423578160200160208202803683370190505b50905060005b8281101561046457858101600090815260676020526040902054825183908390811061045157fe5b6020908102919091010152600101610429565b50949350505050565b606082820360010160008167ffffffffffffffff8111801561048e57600080fd5b506040519080825280602002602001820160405280156104b8578160200160208202803683370190505b50905060005b828110156105185785810160009081526068602090815260408083206001600160a01b038b168452909152902054825160ff9091169083908390811061050057fe5b911515602092830291909101909101526001016104be565b5095945050505050565b61052a61099b565b6033546001600160a01b039081169116146105765760405162461bcd60e51b815260040180806020018281038252602d815260200180611662602d913960400191505060405180910390fd5b61058183838361099f565b5050609c80546001810182556000919091527faf85b9071dfafeac1409d3f1d19bafc9bc7c37974cde8df0ee6168f0086e539c0155565b6000838152606760205260409020546105ec5760405162461bcd60e51b81526004016105e390611477565b60405180910390fd5b6105f884848484610a7f565b50505050565b6034546001600160a01b031690565b61061561099b565b6033546001600160a01b039081169116146106615760405162461bcd60e51b815260040180806020018281038252602d815260200180611662602d913960400191505060405180910390fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319908116909155603480549091169055565b6033546001600160a01b031690565b6034546001600160a01b031661070d5760405162461bcd60e51b815260040180806020018281038252602f815260200180611633602f913960400191505060405180910390fd5b61071561099b565b6034546001600160a01b039081169116146107615760405162461bcd60e51b81526004018080602001828103825260278152602001806115bc6027913960400191505060405180910390fd5b6034546033546040516001600160a01b0392831692909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a360348054603380546001600160a01b03199081166001600160a01b03841617909155169055565b600054610100900460ff16806107e057506107e0610b21565b806107ee575060005460ff16155b6108295760405162461bcd60e51b815260040180806020018281038252602e8152602001806115e3602e913960400191505060405180910390fd5b600054610100900460ff16158015610854576000805460ff1961ff0019909116610100171660011790555b6001600160a01b03821661087a5760405162461bcd60e51b81526004016105e3906114c7565b61088382610b32565b8015610895576000805461ff00191690555b5050565b60005b81518110156108fe576108f6838383815181106108b557fe5b6020026020010151600001518484815181106108cd57fe5b6020026020010151602001518585815181106108e557fe5b6020026020010151604001516105b8565b60010161089c565b505050565b60676020526000908152604090205481565b600080858460405160200161092b929190611342565b60405160208183030381529060405280519060200120905061096183606760008881526020019081526020016000205483610bd0565b9695505050505050565b609c818154811061097b57600080fd5b600091825260209091200154905081565b6069546001600160a01b031681565b3390565b600083815260676020526040902054156109cb5760405162461bcd60e51b81526004016105e39061151b565b6000838152606760205260409081902083905560695490516323b872dd60e01b81526001600160a01b03909116906323b872dd90610a1190339030908690600401611378565b602060405180830381600087803b158015610a2b57600080fd5b505af1158015610a3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a639190611293565b6108fe5760405162461bcd60e51b81526004016105e3906114ee565b60008381526068602090815260408083206001600160a01b038816845290915290205460ff1615610ac25760405162461bcd60e51b81526004016105e39061149e565b610ace84848484610915565b610aea5760405162461bcd60e51b81526004016105e390611447565b60008381526068602090815260408083206001600160a01b03881684529091529020805460ff191660011790556105f88483610c79565b6000610b2c30610d58565b15905090565b600054610100900460ff1680610b4b5750610b4b610b21565b80610b59575060005460ff16155b610b945760405162461bcd60e51b815260040180806020018281038252602e8152602001806115e3602e913960400191505060405180910390fd5b600054610100900460ff16158015610bbf576000805460ff1961ff0019909116610100171660011790555b610bc7610d62565b61088382610e14565b600081815b8551811015610c6e576000868281518110610bec57fe5b60200260200101519050808311610c335782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250610c65565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b50600101610bd5565b509092149392505050565b8015610895577fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a8282604051610cb092919061139c565b60405180910390a160695460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610cea908590859060040161139c565b602060405180830381600087803b158015610d0457600080fd5b505af1158015610d18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3c9190611293565b6108955760405162461bcd60e51b81526004016105e3906114ee565b803b15155b919050565b600054610100900460ff1680610d7b5750610d7b610b21565b80610d89575060005460ff16155b610dc45760405162461bcd60e51b815260040180806020018281038252602e8152602001806115e3602e913960400191505060405180910390fd5b600054610100900460ff16158015610def576000805460ff1961ff0019909116610100171660011790555b610df7610ed1565b610dff610f71565b8015610e11576000805461ff00191690555b50565b600054610100900460ff1680610e2d5750610e2d610b21565b80610e3b575060005460ff16155b610e765760405162461bcd60e51b815260040180806020018281038252602e8152602001806115e3602e913960400191505060405180910390fd5b600054610100900460ff16158015610ea1576000805460ff1961ff0019909116610100171660011790555b606980546001600160a01b0319166001600160a01b0384161790558015610895576000805461ff00191690555050565b600054610100900460ff1680610eea5750610eea610b21565b80610ef8575060005460ff16155b610f335760405162461bcd60e51b815260040180806020018281038252602e8152602001806115e3602e913960400191505060405180910390fd5b600054610100900460ff16158015610dff576000805460ff1961ff0019909116610100171660011790558015610e11576000805461ff001916905550565b600054610100900460ff1680610f8a5750610f8a610b21565b80610f98575060005460ff16155b610fd35760405162461bcd60e51b815260040180806020018281038252602e8152602001806115e3602e913960400191505060405180910390fd5b600054610100900460ff16158015610ffe576000805460ff1961ff0019909116610100171660011790555b600061100861099b565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610e11576000805461ff001916905550565b80356001600160a01b0381168114610d5d57600080fd5b600082601f830112611091578081fd5b813560206110a66110a183611576565b611552565b82815281810190858301838502870184018810156110c2578586fd5b855b858110156110e0578135845292840192908401906001016110c4565b5090979650505050505050565b6000602082840312156110fe578081fd5b6111078261106a565b9392505050565b60008060408385031215611120578081fd5b6111298361106a565b915060208084013567ffffffffffffffff80821115611146578384fd5b818601915086601f830112611159578384fd5b81356111676110a182611576565b81815284810190848601875b848110156111f157813587016060818e03601f1901121561119257898afd5b6040516060810181811089821117156111a757fe5b6040908152828b01358252820135818b01526060820135888111156111ca578b8cfd5b6111d88f8c83860101611081565b6040830152508552509287019290870190600101611173565b50979a909950975050505050505050565b600080600060608486031215611216578081fd5b61121f8461106a565b95602085013595506040909401359392505050565b60008060008060808587031215611249578081fd5b6112528561106a565b93506020850135925060408501359150606085013567ffffffffffffffff81111561127b578182fd5b61128787828801611081565b91505092959194509250565b6000602082840312156112a4578081fd5b81518015158114611107578182fd5b6000602082840312156112c4578081fd5b5035919050565b600080604083850312156112dd578182fd5b823591506112ed6020840161106a565b90509250929050565b60008060006060848603121561130a578283fd5b505081359360208301359350604090920135919050565b60008060408385031215611333578182fd5b50508035926020909101359150565b60609290921b6bffffffffffffffffffffffff19168252601482015260340190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156113ef5783511515835292840192918401916001016113d1565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156113ef57835183529284019291840191600101611417565b901515815260200190565b90815260200190565b60208082526016908201527524b731b7b93932b1ba1036b2b935b63290383937b7b360511b604082015260600190565b6020808252600d908201526c496e76616c696420636c61696d60981b604082015260600190565b6020808252600f908201526e436c61696d656420616c726561647960881b604082015260600190565b6020808252600d908201526c125b9d985b1a59081a5b9c1d5d609a1b604082015260600190565b60208082526013908201527211549497d514905394d1915497d19052531151606a1b604082015260600190565b6020808252601a908201527f63616e6e6f742072657772697465206d65726b6c6520726f6f74000000000000604082015260600190565b60405181810167ffffffffffffffff8111828210171561156e57fe5b604052919050565b600067ffffffffffffffff82111561158a57fe5b506020908102019056fe5065727046694f776e61626c65557067726164653a2073616d652061732063616e6469646174655065727046694f776e61626c65557067726164653a206e6f7420746865206e6577206f776e6572496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a65645065727046694f776e61626c65557067726164653a207a65726f20616464726573735065727046694f776e61626c65557067726164653a2063616e646964617465206973207a65726f20616464726573735065727046694f776e61626c65557067726164653a2063616c6c6572206973206e6f7420746865206f776e65725065727046694f776e61626c65557067726164653a2073616d65206173206f726967696e616ca2646970667358221220ccd58312ef762b71b8b9ae7293c5a18d62013925521fabde4f74ba79ae15cd5b64736f6c63430007060033";

export class PerpLiquidityMining__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PerpLiquidityMining> {
    return super.deploy(overrides || {}) as Promise<PerpLiquidityMining>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PerpLiquidityMining {
    return super.attach(address) as PerpLiquidityMining;
  }
  connect(signer: Signer): PerpLiquidityMining__factory {
    return super.connect(signer) as PerpLiquidityMining__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PerpLiquidityMiningInterface {
    return new utils.Interface(_abi) as PerpLiquidityMiningInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PerpLiquidityMining {
    return new Contract(address, _abi, signerOrProvider) as PerpLiquidityMining;
  }
}
